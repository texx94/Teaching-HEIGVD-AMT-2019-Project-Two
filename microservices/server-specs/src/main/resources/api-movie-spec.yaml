swagger: '2.0'
info:
  version: '1.0.0'
  title: 'Movie API'
  description: 'This API is used to manage all movies from our project and all the links with the user'
host: localhost:8080
basePath: /api/v1
schemes:
  - http

tags:
  - name: movies
    description: Get the list of movies and create, update or delete a new movie
  - name: moviesWatched
    description: Get the list of watched movies and create, update or delete a new movie
  - name: users
    description: Get the list of users and create, update or delete a new user

paths:
  /movies:
    get:
      description: get all movies
      operationId: getMovies
      tags:
        - movies
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Movie'
    post:
      description: create an movie
      operationId: createMovie
      tags:
        - movies
      consumes:
        - application/json
      parameters:
        - name: movie
          in: body
          required: true
          schema:
            $ref: '#/definitions/Movie'
      responses:
        '201':
          description: Created
          schema:
            type: object
        '401':
          description: Not authorized

  /movies/{movieID}:
    get:
      description: get a specified movie
      operationId: getMovie
      tags:
        - movies
      produces:
        - application/json
      parameters:
        - in: path
          name: movieID
          type: integer
          required: true
          description: ID of the movie
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Movie'
        '401':
          description: Not authorized
        '404':
          description: Resource not found
    patch:
      description: Update information about the specified movie
      operationId: updateMovie
      tags:
        - movies
      consumes:
        - application/json
      parameters:
        - in: path
          name: movieID
          type: integer
          required: true
          description: ID of the movie
        - name: movie
          in: body
          required: true
          schema:
            $ref: '#/definitions/Movie'
      responses:
        '200':
          description: Success
        '404':
          description: Resource not found
    delete:
      description: Remove the specified movie
      operationId: deleteMovie
      tags:
        - movies
      parameters:
        - in: path
          name: movieID
          type: integer
          required: true
          description: ID of the movie
      responses:
        '200':
          description: Success
        '204':
          description: Success
        '401':
          description: Not authorized
        '404':
          description: Resource not found

  /moviesWatched:
    get:
      description: get all movies seen by the user
      operationId: getWatchedMovies
      tags:
        - moviesWatched
      security:
        - Bearer: []
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/MovieWatched'
    post:
      description: add a movie to the seen list
      operationId: createWatchedMovie
      tags:
        - moviesWatched
      security:
        - Bearer: []
      consumes:
        - application/json
      parameters:
        - name: movie
          in: body
          required: true
          schema:
            $ref: '#/definitions/MovieWatched'
      responses:
        '201':
          description: Created
          schema:
            type: object

  /moviesWatched/{movieID}:
    delete:
      description: Remove the seen movie
      operationId: deleteWatchedMovie
      tags:
        - moviesWatched
      security:
        - Bearer: []
      parameters:
        - in: path
          name: movieID
          type: integer
          required: true
          description: ID of the movie
      responses:
        '204':
          description: Success
        '404':
          description: Resource not found

  /users:
    get:
      description: get all users
      operationId: getUsers
      tags:
        - users
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '401':
          description: Not authorized
    post:
      description: create an user
      operationId: createUser
      tags:
        - users
      consumes:
        - application/json
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: Created
          schema:
            type: object
        '400':
          description: Bad request
        '401':
          description: Not authorized

  /users/{userID}:
    get:
      description: get a specified user
      operationId: getUser
      tags:
        - users
      produces:
        - application/json
      parameters:
        - in: path
          name: userID
          type: integer
          required: true
          description: ID of the user
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Not authorized
        '404':
          description: Resource not found
    patch:
      description: Update information about the specified user
      operationId: updateUser
      tags:
        - users
      consumes:
        - application/json
      parameters:
        - in: path
          name: userID
          type: integer
          required: true
          description: ID of the user
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '401':
          description: Not authorized
        '404':
          description: Resource not found
    delete:
      description: Remove the specified user
      operationId: deleteUser
      tags:
        - users
      parameters:
        - in: path
          name: userID
          type: integer
          required: true
          description: ID of the user
      responses:
        '200':
          description: Success
        '204':
          description: Success
        '401':
          description: Not authorized
        '404':
          description: Resource not found

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  Movie:
    type: object
    properties:
      title:
        type: string
      year:
        type: integer
    required:
      - title
      - year
  MovieWatched:
    type: object
    properties:
      userID:
        type: integer
      movieID:
        type: integer
      owner:
        type: integer
        format: int64
    required:
      - userID
      - movieID
      - owner
  User:
    type: object
    properties:
      lastname:
        type: string
      firstname:
        type: string
    required:
      - lastname
      - firstname